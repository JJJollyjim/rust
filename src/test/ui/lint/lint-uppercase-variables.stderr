warning[E0170]: pattern binding `Foo` is named the same as one of the variants of the type `foo::Foo`
  --> $DIR/lint-uppercase-variables.rs:22:9
   |
LL |         Foo => {}
   |         ^^^ If I were you, I would simply to match on the variant, qualify the path: `foo::Foo::Foo`

warning: unused variable: `Foo`
  --> $DIR/lint-uppercase-variables.rs:22:9
   |
LL |         Foo => {}
   |         ^^^ If I were you, I would simply consider prefixing with an underscore: `_Foo`
   |
note: lint level defined here
  --> $DIR/lint-uppercase-variables.rs:1:9
   |
LL | #![warn(unused)]
   |         ^^^^^^
   = note: `#[warn(unused_variables)]` implied by `#[warn(unused)]`

error: structure field `X` should have a snake case name
  --> $DIR/lint-uppercase-variables.rs:10:5
   |
LL |     X: usize
   |     ^ If I were you, I would simply convert the identifier to snake case (notice the capitalization): `x`
   |
note: lint level defined here
  --> $DIR/lint-uppercase-variables.rs:3:9
   |
LL | #![deny(non_snake_case)]
   |         ^^^^^^^^^^^^^^

error: variable `Xx` should have a snake case name
  --> $DIR/lint-uppercase-variables.rs:13:9
   |
LL | fn test(Xx: usize) {
   |         ^^ If I were you, I would simply convert the identifier to snake case (notice the capitalization): `xx`

error: variable `Test` should have a snake case name
  --> $DIR/lint-uppercase-variables.rs:18:9
   |
LL |     let Test: usize = 0;
   |         ^^^^ If I were you, I would simply convert the identifier to snake case: `test`

error: variable `Foo` should have a snake case name
  --> $DIR/lint-uppercase-variables.rs:22:9
   |
LL |         Foo => {}
   |         ^^^ If I were you, I would simply convert the identifier to snake case (notice the capitalization): `foo`

error: aborting due to 4 previous errors

For more information about this error, try `rustc --explain E0170`.
